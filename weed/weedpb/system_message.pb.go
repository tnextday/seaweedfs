// Code generated by protoc-gen-go.
// source: system_message.proto
// DO NOT EDIT!

/*
Package weedpb is a generated protocol buffer package.

It is generated from these files:
	system_message.proto

It has these top-level messages:
	VolumeInformationMessage
	JoinMessage
	JoinMessageV2
	CollectionSetting
	JoinResponse
*/
package weedpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type VolumeInformationMessage struct {
	Id               uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Size             uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Collection       string `protobuf:"bytes,3,opt,name=collection" json:"collection,omitempty"`
	FileCount        uint64 `protobuf:"varint,4,opt,name=file_count,json=fileCount" json:"file_count,omitempty"`
	DeleteCount      uint64 `protobuf:"varint,5,opt,name=delete_count,json=deleteCount" json:"delete_count,omitempty"`
	DeletedByteCount uint64 `protobuf:"varint,6,opt,name=deleted_byte_count,json=deletedByteCount" json:"deleted_byte_count,omitempty"`
	ReadOnly         bool   `protobuf:"varint,7,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	ReplicaPlacement uint32 `protobuf:"varint,8,opt,name=replica_placement,json=replicaPlacement" json:"replica_placement,omitempty"`
	Version          uint32 `protobuf:"varint,9,opt,name=version" json:"version,omitempty"`
	Ttl              uint32 `protobuf:"varint,10,opt,name=ttl" json:"ttl,omitempty"`
}

func (m *VolumeInformationMessage) Reset()                    { *m = VolumeInformationMessage{} }
func (m *VolumeInformationMessage) String() string            { return proto.CompactTextString(m) }
func (*VolumeInformationMessage) ProtoMessage()               {}
func (*VolumeInformationMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// deprecated
type JoinMessage struct {
	IsInit         bool                        `protobuf:"varint,1,opt,name=is_init,json=isInit" json:"is_init,omitempty"`
	Ip             string                      `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port           uint32                      `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	PublicUrl      string                      `protobuf:"bytes,4,opt,name=public_url,json=publicUrl" json:"public_url,omitempty"`
	MaxVolumeCount uint32                      `protobuf:"varint,5,opt,name=max_volume_count,json=maxVolumeCount" json:"max_volume_count,omitempty"`
	MaxFileKey     uint64                      `protobuf:"varint,6,opt,name=max_file_key,json=maxFileKey" json:"max_file_key,omitempty"`
	DataCenter     string                      `protobuf:"bytes,7,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	Rack           string                      `protobuf:"bytes,8,opt,name=rack" json:"rack,omitempty"`
	Volumes        []*VolumeInformationMessage `protobuf:"bytes,9,rep,name=volumes" json:"volumes,omitempty"`
	AdminPort      uint32                      `protobuf:"varint,10,opt,name=admin_port,json=adminPort" json:"admin_port,omitempty"`
}

func (m *JoinMessage) Reset()                    { *m = JoinMessage{} }
func (m *JoinMessage) String() string            { return proto.CompactTextString(m) }
func (*JoinMessage) ProtoMessage()               {}
func (*JoinMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JoinMessage) GetVolumes() []*VolumeInformationMessage {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type JoinMessageV2 struct {
	JoinKey        string                      `protobuf:"bytes,1,opt,name=join_key,json=joinKey" json:"join_key,omitempty"`
	Ip             string                      `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port           uint32                      `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	PublicUrl      string                      `protobuf:"bytes,4,opt,name=public_url,json=publicUrl" json:"public_url,omitempty"`
	MaxVolumeCount uint32                      `protobuf:"varint,5,opt,name=max_volume_count,json=maxVolumeCount" json:"max_volume_count,omitempty"`
	MaxFileKey     uint64                      `protobuf:"varint,6,opt,name=max_file_key,json=maxFileKey" json:"max_file_key,omitempty"`
	DataCenter     string                      `protobuf:"bytes,7,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	Rack           string                      `protobuf:"bytes,8,opt,name=rack" json:"rack,omitempty"`
	Volumes        []*VolumeInformationMessage `protobuf:"bytes,9,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *JoinMessageV2) Reset()                    { *m = JoinMessageV2{} }
func (m *JoinMessageV2) String() string            { return proto.CompactTextString(m) }
func (*JoinMessageV2) ProtoMessage()               {}
func (*JoinMessageV2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *JoinMessageV2) GetVolumes() []*VolumeInformationMessage {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type CollectionSetting struct {
	Collection             string `protobuf:"bytes,1,opt,name=collection" json:"collection,omitempty"`
	ReplicaPlacement       string `protobuf:"bytes,2,opt,name=replica_placement,json=replicaPlacement" json:"replica_placement,omitempty"`
	VacuumGarbageThreshold string `protobuf:"bytes,3,opt,name=vacuum_garbage_threshold,json=vacuumGarbageThreshold" json:"vacuum_garbage_threshold,omitempty"`
}

func (m *CollectionSetting) Reset()                    { *m = CollectionSetting{} }
func (m *CollectionSetting) String() string            { return proto.CompactTextString(m) }
func (*CollectionSetting) ProtoMessage()               {}
func (*CollectionSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type JoinResponse struct {
	Error              string               `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	JoinKey            string               `protobuf:"bytes,2,opt,name=join_key,json=joinKey" json:"join_key,omitempty"`
	JoinIp             string               `protobuf:"bytes,3,opt,name=join_ip,json=joinIp" json:"join_ip,omitempty"`
	VolumeSizeLimit    uint64               `protobuf:"varint,4,opt,name=volume_size_limit,json=volumeSizeLimit" json:"volume_size_limit,omitempty"`
	CollectionSettings []*CollectionSetting `protobuf:"bytes,5,rep,name=collection_settings,json=collectionSettings" json:"collection_settings,omitempty"`
	SecretKey          string               `protobuf:"bytes,6,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
}

func (m *JoinResponse) Reset()                    { *m = JoinResponse{} }
func (m *JoinResponse) String() string            { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()               {}
func (*JoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *JoinResponse) GetCollectionSettings() []*CollectionSetting {
	if m != nil {
		return m.CollectionSettings
	}
	return nil
}

func init() {
	proto.RegisterType((*VolumeInformationMessage)(nil), "weedpb.VolumeInformationMessage")
	proto.RegisterType((*JoinMessage)(nil), "weedpb.JoinMessage")
	proto.RegisterType((*JoinMessageV2)(nil), "weedpb.JoinMessageV2")
	proto.RegisterType((*CollectionSetting)(nil), "weedpb.CollectionSetting")
	proto.RegisterType((*JoinResponse)(nil), "weedpb.JoinResponse")
}

var fileDescriptor0 = []byte{
	// 627 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe4, 0x94, 0xe1, 0x4e, 0xd4, 0x40,
	0x10, 0xc7, 0xd3, 0x02, 0x77, 0xd7, 0x39, 0x0e, 0x8f, 0x95, 0x68, 0x89, 0x51, 0xf1, 0x3e, 0x11,
	0x35, 0x98, 0xe0, 0x17, 0xe3, 0x47, 0x48, 0x34, 0xa0, 0x46, 0x52, 0x94, 0xaf, 0x9b, 0x5e, 0x3b,
	0xc0, 0xca, 0xb6, 0xdb, 0xec, 0xee, 0xa1, 0xe7, 0xa3, 0xf8, 0x08, 0xbe, 0x87, 0x89, 0x6f, 0xe3,
	0x2b, 0xb8, 0x3b, 0x7b, 0x3d, 0x81, 0xd3, 0x27, 0xf0, 0xdb, 0xce, 0x7f, 0xa6, 0xdd, 0x99, 0xdf,
	0xcc, 0x2c, 0x6c, 0x98, 0xa9, 0xb1, 0x58, 0xf1, 0x0a, 0x8d, 0xc9, 0xcf, 0x70, 0xa7, 0xd1, 0xca,
	0x2a, 0xd6, 0xf9, 0x8c, 0x58, 0x36, 0xe3, 0xd1, 0xcf, 0x18, 0xd2, 0x13, 0x25, 0x27, 0x15, 0x1e,
	0xd4, 0xa7, 0x4a, 0x57, 0xb9, 0x15, 0xaa, 0x7e, 0x17, 0x42, 0xd9, 0x1a, 0xc4, 0xa2, 0x4c, 0xa3,
	0xad, 0x68, 0x7b, 0x90, 0xb9, 0x13, 0x63, 0xb0, 0x6c, 0xc4, 0x57, 0x4c, 0x63, 0xa7, 0x2c, 0x67,
	0x74, 0x66, 0x0f, 0x00, 0x0a, 0x25, 0x25, 0x16, 0xfe, 0xc3, 0x74, 0xc9, 0x79, 0x92, 0xec, 0x8a,
	0xc2, 0xee, 0x03, 0x9c, 0x0a, 0x89, 0xbc, 0x50, 0x93, 0xda, 0xa6, 0xcb, 0xf4, 0x65, 0xe2, 0x95,
	0x7d, 0x2f, 0xb0, 0x47, 0xb0, 0x5a, 0xa2, 0x44, 0xdb, 0x06, 0xac, 0x50, 0x40, 0x3f, 0x68, 0x21,
	0xe4, 0x29, 0xb0, 0x60, 0x96, 0x7c, 0x3c, 0x9d, 0x07, 0x76, 0x28, 0x70, 0x38, 0xf3, 0xec, 0x4d,
	0xdb, 0xe8, 0x7b, 0x90, 0x68, 0xcc, 0x4b, 0xae, 0x6a, 0x39, 0x4d, 0xbb, 0x2e, 0xa8, 0x97, 0xf5,
	0xbc, 0xf0, 0xde, 0xd9, 0xec, 0x19, 0xac, 0x6b, 0x6c, 0xa4, 0x28, 0x72, 0xde, 0xc8, 0xbc, 0xc0,
	0x0a, 0xdd, 0x9f, 0x7a, 0xbe, 0xbe, 0xbd, 0x38, 0x8d, 0xb2, 0xe1, 0xcc, 0x79, 0xd4, 0xfa, 0x58,
	0x0a, 0xdd, 0x4b, 0xd4, 0xc6, 0x97, 0x96, 0x10, 0x86, 0xd6, 0x64, 0x43, 0x58, 0xb2, 0x56, 0xa6,
	0x40, 0xaa, 0x3f, 0x8e, 0x7e, 0xc4, 0xd0, 0x3f, 0x54, 0x62, 0x4e, 0xef, 0x2e, 0x74, 0x85, 0xe1,
	0xa2, 0x16, 0x96, 0x10, 0xf6, 0xb2, 0x8e, 0x30, 0x07, 0xce, 0x22, 0xac, 0x0d, 0x41, 0x4c, 0x1c,
	0xd6, 0xc6, 0x63, 0x6d, 0x94, 0xb6, 0x04, 0x6f, 0x90, 0xd1, 0xd9, 0x63, 0x6b, 0x26, 0x63, 0x97,
	0x0c, 0x9f, 0x68, 0x49, 0xd8, 0x92, 0x2c, 0x09, 0xca, 0x47, 0x2d, 0xd9, 0x36, 0x0c, 0xab, 0xfc,
	0x0b, 0xbf, 0xa4, 0xce, 0x5d, 0x41, 0x37, 0xc8, 0xd6, 0x9c, 0x1e, 0x1a, 0x1a, 0x78, 0x6c, 0xc1,
	0xaa, 0x8f, 0xa4, 0x1e, 0x5c, 0xe0, 0x74, 0xc6, 0x0d, 0x9c, 0xf6, 0xca, 0x49, 0x6f, 0x70, 0xca,
	0x1e, 0x42, 0xbf, 0xcc, 0x6d, 0xce, 0x0b, 0x57, 0x30, 0x6a, 0x62, 0xe6, 0x5a, 0xe8, 0xa5, 0x7d,
	0x52, 0x7c, 0x7e, 0x3a, 0x2f, 0x2e, 0x08, 0x54, 0x92, 0xd1, 0x99, 0xbd, 0x74, 0x60, 0xe8, 0x16,
	0xe3, 0xc0, 0x2c, 0x6d, 0xf7, 0x77, 0xb7, 0x76, 0xc2, 0x44, 0xed, 0xfc, 0x6b, 0x9a, 0xb2, 0xf6,
	0x03, 0x5f, 0x5b, 0x5e, 0x56, 0xa2, 0xe6, 0x54, 0x75, 0x20, 0x98, 0x90, 0x72, 0xe4, 0x84, 0xd1,
	0xf7, 0x18, 0x06, 0x57, 0x38, 0x9e, 0xec, 0xb2, 0x4d, 0xe8, 0x7d, 0x72, 0x02, 0xe5, 0x1f, 0x51,
	0x12, 0x5d, 0x6f, 0xfb, 0xe4, 0xff, 0x73, 0x96, 0xa3, 0x6f, 0x11, 0xac, 0xef, 0xcf, 0xb7, 0xed,
	0x18, 0xad, 0x15, 0xf5, 0xd9, 0x8d, 0xa5, 0x8c, 0x16, 0x96, 0xf2, 0xc9, 0xdf, 0xf6, 0x20, 0x40,
	0x5c, 0xdc, 0x81, 0x17, 0x90, 0x5e, 0xe6, 0xc5, 0x64, 0x52, 0xf1, 0xb3, 0x5c, 0x8f, 0xdd, 0xed,
	0xdc, 0x9e, 0x6b, 0x34, 0xe7, 0x4a, 0x96, 0xb3, 0x7d, 0xbf, 0x13, 0xfc, 0xaf, 0x83, 0xfb, 0x43,
	0xeb, 0x1d, 0xfd, 0x8a, 0x60, 0xd5, 0x77, 0x32, 0x43, 0xd3, 0xa8, 0xda, 0x20, 0xdb, 0x80, 0x15,
	0xd4, 0x5a, 0xe9, 0x59, 0x4a, 0xc1, 0xb8, 0xd6, 0xde, 0xf8, 0x7a, 0x7b, 0xdd, 0x0e, 0x91, 0xcb,
	0xf5, 0x38, 0x5c, 0xd5, 0xf1, 0xe6, 0x41, 0xc3, 0x1e, 0xc3, 0xfa, 0xac, 0x61, 0xfe, 0x15, 0xe2,
	0x52, 0x54, 0xa2, 0x7d, 0x5d, 0x6e, 0x05, 0xc7, 0xb1, 0xd3, 0xdf, 0x7a, 0x99, 0x1d, 0xc2, 0xed,
	0x3f, 0xb5, 0x73, 0x13, 0x18, 0x19, 0xd7, 0x63, 0xcf, 0x7a, 0xb3, 0x65, 0xbd, 0x40, 0x31, 0x63,
	0xc5, 0x4d, 0x89, 0x66, 0xd7, 0x60, 0xa1, 0xd1, 0xce, 0x07, 0xc0, 0xcd, 0x52, 0x50, 0x5c, 0xbe,
	0xe3, 0x0e, 0xbd, 0xae, 0xcf, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x13, 0x29, 0xcf, 0xb8, 0x75,
	0x05, 0x00, 0x00,
}
